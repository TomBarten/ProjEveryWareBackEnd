// <auto-generated />
using System;
using Fvect.Backend.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fvect.Backend.Data.Database.Migrations
{
    [DbContext(typeof(FvectContext))]
    [Migration("20200416093839_AddMapImagesTable")]
    partial class AddMapImagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fvect.Backend.Data.Database.Model.MapImage", b =>
                {
                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<int>("ZoomLevel")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTimeOffset>("LastTimeAccessed")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("PostalCode", "ZoomLevel");

                    b.ToTable("MapImages");
                });

            modelBuilder.Entity("Fvect.Backend.Data.Database.Model.PrimeNumber", b =>
                {
                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Value");

                    b.ToTable("PrimeNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
